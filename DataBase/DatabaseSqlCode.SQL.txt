CREATE DATABASE HRAS_iTas --this is a changable name but make sure you change it everywhere here and in the singalton pattern in the C# code.

GO

USE HRAS_iTas

CREATE TABLE Staff ( [User_Name] varchar(25), [Password] varchar(50), User_Type char, Failed_Login int, CONSTRAINT PK_Staff PRIMARY KEY ([User_Name]) )

CREATE TABLE Patient ( Last_Name varchar(50), First_Name varchar(25), Middle_initial char, Gender char, SSN char(9), Birth_Date char(8), Address_Line1 varchar(35), Address_Line2 varchar(35), Address_City varchar(25), Address_State char(2), Address_Zip char(5), DNR_Status char, Organ_Donor char, CONSTRAINT PK_Patient PRIMARY KEY (SSN) )

CREATE TABLE Visited_History ( Patient_SSN char(9), Entry_Date datetime, Exit_Date datetime, Insurer varchar(5), Diagnosis varchar(75), Attending_Physician char(5), Notes varchar(100), Bill NUMERIC(7,2), CONSTRAINT PK_Visited_History PRIMARY KEY (Patient_SSN, Entry_Date), CONSTRAINT FK_Visited_History_Patient FOREIGN KEY (Patient_SSN) REFERENCES Patient (SSN) )

CREATE TABLE Room ( Room_Number char(9), Hourly_Rate NUMERIC(5,2), Effective_Date char(8), CONSTRAINT PK_Room PRIMARY KEY (Room_Number) )

CREATE TABLE Symptom ( [Name] varchar(25), CONSTRAINT PK_Symptom PRIMARY KEY ([Name]) )

CREATE TABLE Item ( Stock_ID char(5), Quantity NUMERIC(5,0), [Description] varchar(35), Size varchar(3), Cost NUMERIC(8,0), CONSTRAINT PK_Item PRIMARY KEY (Stock_ID) )

CREATE TABLE Show_Signs ( Symptom_Name varchar(25), Patient_SSN char(9), Entry_Date datetime, CONSTRAINT PK_Show_Signs PRIMARY KEY (Symptom_Name, Patient_SSN, Entry_Date), CONSTRAINT FK_Show_Signs_Symptom FOREIGN KEY (Symptom_Name) REFERENCES Symptom ([Name]), CONSTRAINT FK_Show_Signs_Visited_History FOREIGN KEY (Patient_SSN, Entry_Date) REFERENCES Visited_History (Patient_SSN, Entry_Date) )

CREATE TABLE Stayed_In ( Room_Number char(9), Patient_SSN char(9), Entry_Date datetime, CONSTRAINT PK_Stayed_In PRIMARY KEY (Room_Number, Patient_SSN, Entry_Date), CONSTRAINT FK_Stayed_In_Room FOREIGN KEY (Room_Number) REFERENCES Room (Room_Number), CONSTRAINT FK_Stayed_In_Visited_History FOREIGN KEY (Patient_SSN, Entry_Date) REFERENCES Visited_History (Patient_SSN, Entry_Date) )

CREATE TABLE Attended_Physican ( [User_Name] varchar(25), Patient_SSN char(9), Entry_Date datetime, CONSTRAINT PK_Attended_Physican PRIMARY KEY ([User_name], Patient_SSN, Entry_Date), CONSTRAINT FK_Attended_Physican_Staff FOREIGN KEY ([User_Name]) REFERENCES Staff ([User_name]), CONSTRAINT FK_Attended_Physican_Visited_History FOREIGN KEY (Patient_SSN, Entry_Date) REFERENCES Visited_History (Patient_SSN, Entry_Date) )

CREATE TABLE Takes_Care ( Patient_SSN char(9), [User_Name] varchar(25), CONSTRAINT PK_Takes_Care PRIMARY KEY (Patient_SSN, [User_Name]), CONSTRAINT FK_Takes_Care_Patient FOREIGN KEY (Patient_SSN) REFERENCES Patient (SSN), CONSTRAINT FK_Takes_Care_Staff FOREIGN KEY ([User_Name]) REFERENCES Staff ([User_Name]) )

CREATE TABLE [Use] ( Stock_ID char(5), [User_Name] varchar(25), Patient_SSN char(9), Entry_Date datetime, Quantity_Used NUMERIC(5,0), [Date] datetime, CONSTRAINT PK_Use PRIMARY KEY (Stock_ID, [User_Name], Patient_SSN, Entry_Date, [DATE]), CONSTRAINT FK_Use_Item FOREIGN KEY (Stock_ID) REFERENCES Item (Stock_ID), CONSTRAINT FK_Use_Staff FOREIGN KEY ([User_Name]) REFERENCES Staff ([User_Name]), CONSTRAINT FK_Use_Visited_History FOREIGN KEY (Patient_SSN, Entry_Date) REFERENCES Visited_History (Patient_SSN, Entry_Date) )

GO

CREATE PROCEDURE Verify_Login @username nvarchar(25), @password varchar(50) AS BEGIN IF EXISTS (SELECT User_Name, User_Type FROM Staff WHERE User_Name = @username AND Password = @password) BEGIN SELECT User_Name, User_Type, Failed_Login FROM Staff WHERE User_Name = @username AND Password = @password END ELSE BEGIN IF EXISTS (SELECT User_Name, User_Type FROM Staff WHERE User_Name = @username) BEGIN UPDATE Staff SET Failed_Login = Failed_Login + 1 WHERE User_Name = @username END END END

GO

CREATE PROCEDURE Import_Medical_Record @ssn char(9), @entryDateTime datetime, @exitDateTime datetime, @diagnosis varchar(75), @insurer varchar(5), @notes varchar(100) AS BEGIN INSERT INTO Visited_History(Patient_SSN, Entry_Date, Exit_Date, Diagnosis, Insurer, Notes) VALUES(@ssn, @entryDateTime, @exitDateTime, @diagnosis, @insurer, @notes) END

GO

CREATE PROCEDURE Import_Patient @lastName varchar(50), @firstName varchar(25), @middleInitial varchar(1), @gender varchar(1), @ssn varchar(9), @birthDate varchar(8), @addressLine1 varchar(35), @addressLine2 varchar(35), @addressCity varchar(25), @addressState varchar(2), @addressZip varchar(5), @dnrStatus varchar(1), @organDonor varchar(1) AS BEGIN INSERT INTO Patient(Last_Name, First_Name, Middle_Initial, Gender, SSN, Birth_Date, Address_Line1, Address_Line2, Address_City, Address_State, Address_Zip, DNR_Status, Organ_Donor) VALUES(@lastName, @firstName, @middleInitial, @gender, @ssn, @birthDate, @addressLine1, @addressLine2, @addressCity, @addressState, @addressZip, @dnrStatus, @organDonor) END

GO

CREATE PROCEDURE Import_Item @stockID char(5), @quantity numeric(5,0) = null, @description varchar(35), @size varchar(3), @cost numeric(8,0) AS BEGIN INSERT INTO Item(Stock_ID, Quantity, [Description], Size, Cost) VALUES(@stockID, @quantity, @description, @size, @cost) END

GO

CREATE PROCEDURE Import_Room @roomNumber char(9), @hourlyRate numeric(5,2), @effectiveDate char(8) AS BEGIN INSERT INTO Room(Room_Number, Hourly_Rate, Effective_Date) VALUES(@roomNumber, @hourlyRate, @effectiveDate) END

GO

CREATE PROCEDURE Import_Show_Signs @symptomName varchar(25), @ssn char(9), @entryDate datetime AS BEGIN INSERT INTO Show_Signs(Symptom_Name, Patient_SSN, Entry_Date) VALUES(@symptomName, @ssn, @entryDate) END

GO

CREATE PROCEDURE Retrieve_Hourly_Rate @hourlyRate NUMERIC(5,2) AS BEGIN Select Hourly_Rate FROM Room WHERE Hourly_Rate = @hourlyrate END

GO

CREATE PROCEDURE Import_Symptom @symptomName varchar(25) AS BEGIN INSERT INTO Symptom(Name) VALUES(@symptomName) END

GO

CREATE PROCEDURE Import_User @username varchar(25), @password varchar(50), @userType char(1), @failedLogins int AS BEGIN INSERT INTO Staff([User_Name], [Password], User_Type, Failed_Login) VALUES(@username, @password, @userType, @failedLogins) END

GO

CREATE PROCEDURE Retrieve_Symptom @symptomName varchar(25) AS BEGIN Select [Name] FROM Symptom WHERE [Name] = @symptomName END

GO

CREATE PROCEDURE Retrieve_Item @stockID char(5) AS BEGIN Select Stock_ID FROM Item WHERE Stock_ID = @stockID END

GO

CREATE PROCEDURE Import_Stayed_In @roomNumber varchar(9), @ssn varchar(9), @entryDate datetime AS BEGIN INSERT INTO Stayed_In(Room_Number, Patient_SSN, Entry_Date) VALUES(@roomNumber, @ssn, @entryDate) END

GO

CREATE PROCEDURE Import_Inventory @stockID char(5), @quantity numeric(5,0), @description varchar(35), @size varchar(3), @cost numeric(8,0) AS BEGIN INSERT INTO Item(Stock_ID, Quantity, [Description], Size, Cost) VALUES(@stockID, @quantity, @description, @size, @cost) END

GO

CREATE PROCEDURE Add_To_Existing_Inventory @stockID char(5), @quantity numeric(5,0) AS BEGIN UPDATE Item SET Quantity = Quantity + @quantity WHERE Stock_ID = @stockID END

GO

CREATE PROCEDURE Get_Items_Top AS BEGIN SELECT TOP 1000 * FROM Item END

GO

CREATE PROCEDURE Get_Medical_Records_Top AS BEGIN SELECT TOP 1000 Patient.First_Name, Patient.Last_Name, Visited_History.* FROM Visited_History INNER JOIN Patient ON Visited_History.Patient_SSN = Patient.SSN END

GO

CREATE PROCEDURE Search_Items @stockID varchar(5), @description varchar(35), @size varchar(3) AS BEGIN SELECT * FROM Item WHERE [Description] like '%' + @description + '%' AND Stock_ID like '%' + @stockID + '%' AND Size like '%' + @size + '%' END

GO

CREATE PROCEDURE Search_Medical_Records @input varchar(50) AS BEGIN SELECT Patient.First_Name, Patient.Last_Name, Visited_History.* FROM Visited_History INNER JOIN Patient ON Visited_History.Patient_SSN = Patient.SSN where First_Name LIKE '%' + @input + '%' OR Last_Name LIKE '%' + @input + '%' OR Patient_SSN LIKE '%' + @input + '%' END

GO

CREATE PROCEDURE Get_Failed_Attempts @userName varchar(25) AS BEGIN SELECT Failed_Login FROM Staff WHERE [User_Name] = @userName END

GO

CREATE PROCEDURE Retrieve_Item_Quantity @stockID char(5) AS BEGIN Select Quantity FROM Item WHERE Stock_ID = @stockID END

GO

CREATE PROCEDURE Withdraw_Inventory  @stockID char(5), @username varchar(25), @ssn char(9), @entryDate datetime, @quantity numeric(5,0), @date date 
AS 
BEGIN 
UPDATE Item SET Quantity = Quantity - @quantity WHERE Stock_ID = @stockID 
INSERT INTO [Use](Stock_ID, [User_Name], Patient_SSN, Entry_Date, Quantity_Used, [Date]) Values(@stockID, @username, @ssn, @entryDate, @quantity, @date)
END

GO

CREATE PROCEDURE Retrieve_Patient_Page @ssn char(9), @entryDateTime datetime 
AS 
BEGIN 
SELECT  Patient.*, Visited_History.*
FROM 
Visited_History
INNER JOIN Patient ON Visited_History.Patient_SSN = Patient.SSN  
WHERE Visited_History.Patient_SSN = @ssn AND Visited_History.Entry_Date = @entryDateTime
END

GO

CREATE PROCEDURE Retrieve_Hourly_Rate @roomNumber char(9)
AS 
BEGIN 
SELECT  Hourly_Rate
FROM 
Room
WHERE Room_Number = @roomNumber
END

GO

CREATE PROCEDURE Retrieve_Room_Number @ssn char(9), @entryDate datetime
AS 
BEGIN 
SELECT  Room_Number
FROM Stayed_In
WHERE Patient_SSN = @ssn AND Entry_Date = @entryDate
END

GO

CREATE PROCEDURE Retrieve_Symptoms @ssn char(9), @entryDate datetime
AS 
BEGIN 
SELECT Symptom_Name
FROM Show_Signs
WHERE Patient_SSN = @ssn AND Entry_Date = @entryDate
END

GO

CREATE PROCEDURE Retrieve_SSN @ssn char(9) AS BEGIN Select SSN FROM Patient WHERE SSN = @ssn END

GO

CREATE PROCEDURE Verify_Username @userName varchar(25) AS BEGIN SELECT [User_Name] FROM Staff WHERE [User_Name] = @userName END

GO

CREATE PROCEDURE Get_Entry_Date @ssn char(9) AS BEGIN SELECT Visited_History.Entry_Date FROM Visited_History INNER JOIN Patient ON Visited_History.Patient_SSN = Patient.SSN WHERE Visited_History.Entry_Date IS NOT NULL AND Visited_History.Exit_Date IS NULL ORDER BY Visited_History.Entry_Date DESC END

GO

USE [HRAS_iTas] CREATE LOGIN HRAS_MW_iTas
WITH PASSWORD = 'ZMNv01X';
GO

USE [HRAS_iTas] CREATE USER HRAS_MW_iTas FOR LOGIN HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Item TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Add_To_Existing_Inventory TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Medical_Record TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Patient TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Room TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Show_Signs TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Stayed_In TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Symptom TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Room_Number TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_Inventory TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Item TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Symptoms TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Symptom TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Verify_Login TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Get_Items_Top TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Get_Medical_Records_Top TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Search_Items TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Search_Medical_Records TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Hourly_Rate TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Get_Failed_Attempts TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Verify_Username TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Import_User TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Item_Quantity TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Withdraw_Inventory TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Get_Entry_Date TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Hourly_Rate TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_Patient_Page TO HRAS_MW_iTas;
GO

ALTER LOGIN HRAS_MW_iTas ENABLE;
GO

USE [HRAS_iTas] GRANT EXECUTE ON OBJECT::Retrieve_SSN TO HRAS_MW_iTas;
GO

USE [HRAS_iTas] INSERT INTO Staff([User_Name], [Password], [User_Type], [Failed_Login]) VALUES('admin', 'W6ph5Mm5Pz8GgiULbPgzG37mj9g=', 'A', 0)
